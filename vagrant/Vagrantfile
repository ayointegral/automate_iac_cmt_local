# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  # Use CentOS 7 or CentOS 8 depending on your preference or need
  centos_version = "generic/centos9s"

  # Define the first VM - CentOS
  config.vm.define "nebula" do |nebula|
    nebula.vm.box = centos_version
    nebula.vm.hostname = "nebula"
    nebula.vm.network "forwarded_port", guest: 22, host: 2222, id: "ssh"  # Forward SSH port
  end

  # Define the second VM - CentOS
  config.vm.define "cosmos" do |cosmos|
    cosmos.vm.box = centos_version
    cosmos.vm.hostname = "cosmos"
    cosmos.vm.network "forwarded_port", guest: 22, host: 2223, id: "ssh"  # Forward SSH port
  end

  # Define the third VM - CentOS
  config.vm.define "quasar" do |quasar|
    quasar.vm.box = centos_version
    quasar.vm.hostname = "quasar"
    quasar.vm.network "forwarded_port", guest: 22, host: 2224, id: "ssh"  # Forward SSH port
  end

  # Define the fourth VM - CentOS
  config.vm.define "pulsar" do |pulsar|
    pulsar.vm.box = centos_version
    pulsar.vm.hostname = "pulsar"
    pulsar.vm.network "forwarded_port", guest: 22, host: 2225, id: "ssh"  # Forward SSH port
  end

  # Define the fifth VM - CentOS
  config.vm.define "supernova" do |supernova|
    supernova.vm.box = centos_version
    supernova.vm.hostname = "supernova"
    supernova.vm.network "forwarded_port", guest: 22, host: 2226, id: "ssh"  # Forward SSH port
  end

  # Define the sixth VM - CentOS
  config.vm.define "ansibleserver" do |supernova|
    supernova.vm.box = centos_version
    supernova.vm.hostname = "ansibleserver"
    supernova.vm.network "forwarded_port", guest: 22, host: 2227, id: "ssh"  # Forward SSH port
  end

  # Define the Windows Server VM
  config.vm.define "windows-server" do |windows|
    windows.vm.box = "iliec/windows-2019-standard"  # Windows Server 2019 Eval box
    windows.vm.hostname = "galaxyrealm"
    windows.vm.network "forwarded_port", guest: 3389, host: 3389, id: "rdp"  # Forward RDP port

    # WinRM configuration
    windows.vm.network "forwarded_port", guest: 5985, host: 5985, id: "winrm"  # Forward WinRM HTTP port (5985)
    windows.vm.network "forwarded_port", guest: 5986, host: 5986, id: "winrm-https"  # Forward WinRM HTTPS port (5986)

    windows.vm.provider "parallels" do |prl|
      prl.memory = 4096  # Adjust memory for Windows
      prl.cpus = 2       # Adjust CPU for Windows
    end

    windows.vm.guest = :windows
    windows.vm.communicator = "winrm"

    # Provisioning: Enable and configure WinRM for Ansible
    windows.vm.provision "shell", inline: <<-SHELL
      # Enable WinRM for Ansible
      winrm quickconfig -q
      winrm set winrm/config/service/Auth @{Basic="true"}
      winrm set winrm/config/service @{AllowUnencrypted="true"}
      winrm set winrm/config/listener?Address=*+Transport=HTTP @{Port="5985"}
      Set-Item -Path WSMan:\localhost\Service\AllowUnencrypted -Value true
      Set-Item -Path WSMan:\localhost\Service\Auth\Basic -Value true

      # Open necessary firewall ports
      netsh advfirewall firewall add rule name="Allow WinRM" dir=in action=allow protocol=TCP localport=5985
      netsh advfirewall firewall add rule name="Allow WinRM Secure" dir=in action=allow protocol=TCP localport=5986

      # Set up a user with admin privileges if needed for Ansible
      net user ansible /add
      net localgroup administrators ansible /add
    SHELL
  end
end
