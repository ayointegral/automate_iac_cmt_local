---
- name: Upgrade, update, and install Docker on Linux servers
  hosts: linux_servers
  become: true
  tasks:
    - name: Ensure all packages are up to date
      yum:
        name: '*'
        state: latest

    - name: Clean all yum cache
      command: yum clean all

    - name: Install required packages for Docker
      yum:
        name:
          - yum-utils
          - device-mapper-persistent-data
          - lvm2
        state: present

    - name: Add Docker repository
      command: >
        yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
      args:
        creates: /etc/yum.repos.d/docker-ce.repo

    - name: Install Docker
      yum:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Ensure current user is added to the docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Check if Docker group exists
      getent:
        database: group
        key: docker
      register: docker_group

    - name: Create Docker group if it doesn't exist
      group:
        name: docker
        state: present
      when: docker_group is not defined

    - name: Change ownership of Docker socket to root:docker
      file:
        path: /var/run/docker.sock
        owner: root
        group: docker
        mode: '0660'

    - name: Restart Docker service after permission changes
      systemd:
        name: docker
        state: restarted

    - name: Install and start firewalld
      yum:
        name: firewalld
        state: present

    - name: Ensure firewalld is started and enabled
      systemd:
        name: firewalld
        state: started
        enabled: yes

    - name: Allow Docker daemon port (2376) through firewall
      ansible.posix.firewalld:
        port: 2376/tcp
        permanent: yes
        state: enabled
      notify:
        - Reload firewall

    - name: Allow Docker Swarm management port (2377) through firewall
      ansible.posix.firewalld:
        port: 2377/tcp
        permanent: yes
        state: enabled
      notify:
        - Reload firewall

    - name: Allow Overlay network traffic port (4789) through firewall
      ansible.posix.firewalld:
        port: 4789/udp
        permanent: yes
        state: enabled
      notify:
        - Reload firewall

    - name: Allow Docker Swarm node communication ports (7946) through firewall
      ansible.posix.firewalld:
        port: 7946/tcp
        permanent: yes
        state: enabled
      notify:
        - Reload firewall

    - name: Allow Docker Swarm node communication ports (7946) through firewall (UDP)
      ansible.posix.firewalld:
        port: 7946/udp
        permanent: yes
        state: enabled
      notify:
        - Reload firewall

    - name: Enable IP masquerading for Docker network
      ansible.posix.firewalld:
        zone: public
        masquerade: yes
        permanent: yes
        state: enabled
      notify:
        - Reload firewall

    - name: Check if DNS is already set in Docker daemon.json
      stat:
        path: /etc/docker/daemon.json
      register: daemon_file

    - name: Read Docker daemon.json
      slurp:
        path: /etc/docker/daemon.json
      register: docker_daemon_json
      when: daemon_file.stat.exists

    - name: Set DNS for Docker daemon (ensure no duplication)
      copy:
        dest: /etc/docker/daemon.json
        content: |
          {
            "dns": ["8.8.8.8", "8.8.4.4"]
          }
        mode: '0644'
        backup: yes
      notify:
        - Restart Docker
      when: >
        not daemon_file.stat.exists or
        '"dns": ["8.8.8.8", "8.8.4.4"]' not in (docker_daemon_json.content | b64decode)

    - name: Set SELinux in permissive mode temporarily (if needed)
      selinux:
        policy: targeted
        state: permissive

  handlers:
    - name: Reload firewall
      command: firewall-cmd --reload

    - name: Restart Docker
      systemd:
        name: docker
        state: restarted
